1.字体简写
	属性:font
	取值:style variant weight size/line-height family;
	注意：
	使用简写属性时，必须要设置family的值，否则无效
	font:12px //不对
	font:12px "微软雅黑";//正确

2.背景简写
	属性: background
	取值：color url() repeat attachment position;
	注意：如果不设置其中某个值的话，该位置将采用默认值
		  如果在一个元素中写了两个或更多background 的简写属性，则全部都不好使
	  如 
		background:url(Day02/作业.jpg) center /*两个属性都好使*/

		background:url(Day02/作业.jpg);  /*两个属性都不好使*/
	background:center;
 
3.边框阴影
    属性：box-shadow
    取值：h-shadow v-shadow blur spread color inset
      h-shadow : 
		阴影的水平偏移距离，必须的
		取值为正，阴影右偏移
		取值为负，阴影左偏移
      v-shadow:
        阴影的垂直偏移距离，必须的
		取值为正，阴影下偏移
		取值为负，阴影上偏移
      blur:
        模糊距离，取值越大，模糊效果越明显，以px为单位的数值
      spread :
        阴影的大小，指定要在基础阴影上扩充出来的大小距离，取值为 px 为单位的数值
      color: 
        阴影颜色
      inset:将默认的外阴影改为内阴影

4.线性渐变
    属性：background-image
    取值：linear-gradient(angle,color-point1,color-point2,...);
      1.angle
        表示渐变填充的方向或角度
	取值：
	  1.关键字
	    1.to top
	      从下向上填充渐变色
	    2.to right
	      从左向右填充渐变色
	    3.to bottom
	      从上向下填充渐变色
	    4.to left
	      从右向左填充渐变色
	  2.角度值
	    1.0deg
	      从下向上填充渐变色等同于 to top
	    2.90deg
	      从左向右填充渐变色等同于 to right
	    3.180deg 
	      从上向下填充渐变色等同于 to bottom
	    4.270deg
	      从右向左填充渐变色等同于 to left
      2.color-point
        色标:颜色 及其 位置
		取值：颜色 以及 位置的组合，中间用 空格 隔开
	ex:
	  1.red 0%
	    在填充方向的开始位置处颜色为 红色
	  2.green 50%
	    到填充方向一半的位置处，颜色变为绿色
	  3.blue 200px
	    到填充方向的200px的位置处，颜色变为蓝色

5.浏览器兼容性
	各浏览器的新版本都支持渐变属性
	对于不支持的浏览器版本，可以通过增加浏览器前缀的方式，让浏览器支持渐变
	  Firefox ：-moz-
	  Chrome & Safari : -webkit-
	  Opera : -o-
	  IE : -ms-
	  
	  #di {
		  background:-moz-linear-gradient(0deg,red,blue);
		  background:-webkit-linear-gradient(0deg,red,blue);
		  background:-o-linear-gradient(0deg,red,blue);
		  background:-ms-linear-gradient(0deg,red,blue);
	  }

6.浮动元素对父元素高度带来的影响
    元素的高度，都是以未浮动元素的高度为准的。浮动元素是不占高度的
    解决父元素高度方案如下：
    1.直接设置父元素高度
      弊端：不是每次都知道父元素的高度
    2.设置父元素也跟着浮动
      弊端：不是任何时候父元素都需要浮动，而且浮动会影响后续元素
    3.为父元素设置 overflow 
      取值：hidden 或 auto
      弊端：如果有内容需要溢出显示的话，也会一同被隐藏
    4.在父元素中追加空子元素，并设置其clear:both

7.显示 / 隐藏
	1.display:
		1.none 2.block 3.inline 4.inline-block 5.table...

	2.visibility:
      取值：
        1.visible : 默认值，可见的
		2.hidden : 隐藏，依然占据空间
    3.透明度
      属性：opacity
      取值：
        1.0.0(完全透明) ~ 1.0(完全不透明) 之间的小数 

8.垂直对齐方式
      属性：vertical-align
      作用：设置 td 和 img 的垂直对齐方式
      取值：
        1.设置在 td 上的 值
	  1.top
	  2.middle
	  3.bottom
	  ps：Vertical-align被用于垂直对齐inline元素，也就是display值为inline和inline-block的元素

9.光标
    作用：当鼠标悬停在元素上时表现的形式
    属性：cursor
    取值：
      1.default
      2.pointer : 小手
      3.crosshair : +
      4.text : I
      5.wait : 等待中
      6.help : 帮助 鼠标旁边有个?

10.列表属性
    属性：list-style
    取值：style image position;
    常用用法：
      list-style:none;

11.复杂选择器
  1.兄弟选择器
		注意：兄弟选择器只能向后找，不能向前找
		1.相邻兄弟选择器
		  作用：获取紧紧挨着某元素后的兄弟元素
		  语法：选择器1+选择器2{ ... }
		  #p1+#p2{} //获取到p2
		  #p1+p{}	//获取到p
		2.通用兄弟选择器
		  作用：获取某元素后的兄弟元素
		  语法：选择器1~选择器2{ ... }
		  #p1~p{ ... } //获取到p2 p3
    
  2.属性选择器
      <input id="uname" type="text" name="uname" placeholder="Plear input...">
      1.作用：
        通过元素所附带的属性及其值来匹配页面的元素
      2.语法
        1.基本语法：[attr]
	  作用：匹配附带 attr 属性的元素
	ex:
	  1.[id] : 匹配页面中所有附带id属性的元素
	  2.[class] : 匹配页面中所有附带class属性的元素
	
	2.elem[attr]
	  elem:表示任意元素
	  attr:表示任意属性
	  作用：匹配页面中附带 attr 属性的 elem 元素
	  ex:
	    1.匹配页面中所有附带了 id 属性的 div 元素
		div[id]
	    2.匹配页面中所有附带了 type 属性的 input 元素
	        input[type]
	    3..important[id]
        
	3.[attr1][attr2]...
	  作用：匹配同时附带多个 属性的 元素
	  ex:
	    div[id][class] { ... }
	
	4.[attr=value]
	  作用：匹配 attr 属性的值为 value 的元素
	  ex：
	    1.匹配页面中所有的文本框
		input[type=text]{ ... }
		input[type='text']{ ... }
		input[type="text"]{ ... }
  
  3.伪类选择器
    1.目标伪类
      作用：突出显示活动的HTML锚点元素，匹配到被激活的锚点
      语法：
        选择器:target{ ... }
        
    2.结构伪类
      1.:first-child
        匹配的元素是 属于其父元素 中的首个子元素
      2.:last-child
        匹配的元素是 属于其父元素 中的最后一个子元素
      3.:nth-child(n)
        匹配的元素是 属于其父元素 中的第n个子元素
	ex:
	  :nth-child(5){ ... }
      4.:empty
        匹配没有子元素的元素
      5.:only-child
        匹配的元素是 属于其父元素 中的唯一子元素
    
    3.否定伪类
      将满足指定选择器的元素给排除出去
      :not(selector)
      ex:
        #tbl tr:not(:first-child){}
  
  4.伪元素选择器
    1.:first-letter 或 ::first-letter
      作用：匹配某元素中的某首字符
      ex:
        p:first-letter{
	  color:red;
	  font-weight:bold;
	}
    2.:first-line 或 ::first-line
      作用：匹配某元素中的首行
      ex:
        p:first-line{
	  color:blue;
	}
   3.::selection
     作用：匹配被用户选取的部分内容
     注意：只能修改文本颜色 和 背景颜色

12.内容生成

	1.:before 或 ::before
      作用：匹配到某元素的内容区域之前
      <p>(:befor)举头望明月</p>

	2.:after 或 ::after
      作用：匹配到某元素的内容区域之后
      <p>低头思故乡(:after)</p>
		p:after{
				content:"-摘自《论语》";
				display:block;
		}
	属性：content
    作用：向某位置处增加内容
    取值：
      1.字符串 ： 用 "" 引起来的普通文本
      2.url() : 要生成一副图像显示在指定的位置处

    解决问题：
      1.浮动元素父元素高度的问题  content_floatproblem.html
      2.子元素外边距溢出的问题 child_margin-topproblem.html

13.弹性布局
    注意：
      1.元素设置为 display:flex 之后，子元素的float,clear,vertical-align 将失效
      2.子元素的尺寸是允许被修改的
      3.弹性布局容器的text-align属性会失效
	1.容器的属性
      1.flex-direction
        作用：指定容器的主轴及其排列方向
				主轴：项目排列的一根轴，如果横轴作为主轴的话，那么项目们将横向排列，
				如果纵轴作为主轴的话，那么项目们将纵向排列				
				交叉轴：与主轴交叉的轴，如果横轴为主轴，那么纵轴为交叉轴
		取值：
			1.row
				默认值，即主轴为 "横轴"，即起点在左端
			2.row-reverse
				主轴为横轴，起点在右端
			3.column-reverse
				主轴为纵轴，起点在低端
	  2.flex-wrap
		作用：一根主轴排列不下所有的项目是，如何换行
		取值：
		  1.nowrap：默认值，即不换行，项目缩小
		  2.wrap：换行
		  3.wrap-reverse 
	  3.justify-content
		  作用：定义项目在主轴上的对其方式
		  取值：
			1.flex-start：在主轴的起点对齐
			2.flex-end：在主轴的终点对齐
			3.center：在主轴上居中对齐
			4.space-between：两端对齐，第一个项目挨着起点，
			最后一个项目挨着终点，中间间隔平分
			5.space-around ：每个项目的外边距相等
	  4.align-items
		  作用：项目在交叉轴上对齐方式
		  取值：
			1.flex-start：在交叉轴的起点对齐
			2.flex-end：在交叉轴的终点对齐
			3.center:在交叉轴上居中对齐
			4.baseline：在交叉轴上基线对齐
			5.stretch：如果项目未设置高度的话，将沾满容器的整个高度
    
	2.项目的属性
		  改组属性只能设置在莫一项目上，只控制某一项目，不影响容器及其他项目
		  1.flex-grow
			  作用：定义项目的放大比例。如果容器有足够的多余空间的话，项目将如何放大
			  取值：
				  整数数字，默认为0，即不放大
				  取值越大，占据的剩余空间也就越多	

14.过渡
	1、什么是过渡
		将CSS的属性值在一段时间内平缓变化的过程给体现出来
	2、过渡的语法 - 4属性
		1、指定过渡属性
			作用：指定哪个属性值，在变化时需要使用过渡效果来体现
			属性：transition-property
			取值：使用过渡效果的属性名称
			ex:
				transition-property:background;
			注意：
				允许设置过渡效果的属性如下：
					1、颜色属性
					2、取值为数字的属性
					3、转换属性 : transform
					4、渐变属性
					5、阴影属性
					6、visibility属性
		2、指定过渡时长
			作用：指定在多长时间内完成过渡的操作
			属性：transition-duration
			取值：以 s 或 ms 为单位的数值
				1000ms = 1s
		3、指定过渡速度时间函数
			属性：transition-timing-function
			取值：
				1、ease ：默认值，慢速开始，快速变快，慢速结束
				2、linear ：匀速
				3、ease-in ：慢速开始，加速结束
				4、ease-out ：快速开始，慢速结束
				5、ease-in-out : 慢速开始和结束，中间先加速后减速
		4、指定过渡延迟时间
			属性：transition-delay
			取值：以 s 或 ms 为单位的数值
	3、过渡的编写位置
		1、允许将过渡属性编写在元素声明的样式中
		2、允许将过渡属性编写在触发过渡效果样式中(hover)
	4、过渡的简介写法
		transition:property duration timing-function delay;

		transition:all .5s linear;
		练习：
			1、在页面中创建1个 100*100的元素
			2、鼠标悬停时，5秒钟之内，向右偏移500px的同时再旋转3圈
			3、鼠标移出去的时候，还能滚回来

15.转换
  1.什么是转换
	  改变元素在页面中的位置，大小，角度以及形状的一种方式
		2D转换：只在x，y轴转换(平面效果)
		3D转换：只在x，y，z轴转换(立体效果)
	2.转换属性
	    转换属性：
			属性：transform
			取值：
				1.none ：默认值，即无任何转换效果
				2.transform-function
					表示的是1个或多个转换函数，如果是多个转换函数(效果)的话，中间用 空格 隔开
		转换原点：
			属性：transform-origin
			取值：数值 / 百分比 / 关键字
				2个值：原点在x轴 和 y轴的位置
				3个值：原点在x，y，z轴上的位置
  3、2D转换
		1、位移
			1、什么是位移
				改变元素在页面中的位置
			2、语法
				属性：transform
				取值：
					1、translate(x)
						指定元素在x轴上的偏移距离
						取值为正，元素右移
						取值为负，元素左移
					2、translate(x,y)
						x ：同上
						y ：指定元素在y轴上的偏移距离
							取值为正，元素下移
							取值为负，元素上移
					3、translateX(x)
					4、translateY(y)
		2、缩放
			1、什么是缩放
				改变元素在页面中的尺寸(按比例)
			2、语法
				属性：transform
				取值：
					1、scale(value)
						value : 横向 和 纵向的缩放比例
					2、scale(x,y)
						x : 横向的缩放比例
						y : 纵向的缩放比例
					3、单向缩放函数
						scaleX(x)
						scaleY(y)

				缩放比例：
					默认值为 1
					缩小：0-1之间的数字
					放大：大于1的数字
		3、旋转
			1、什么是旋转
				改变元素在页面上的角度
			2、语法
				属性：transform
				取值：
					rotate(ndeg);
						n取值为正，顺时针旋转
						n取值为负，逆时针旋转
			3、注意
				1、转换原点会影响最后的转换效果
					练习：
						1、将转换原点更改为元素的左上角
						2、再将元素旋转45deg，观看效果
				2、旋转是连同坐标轴都一同旋转的，会影响旋转后的位移效果
					练习：
						1、将d2元素先旋转45deg，再向右位移50px
						2、将d2元素先向右位移50px，再旋转45deg
		4、倾斜
			1、什么是倾斜
				改变元素在页面中的形状
			2、语法
				属性：transform
				取值：
					1、skewX(xdeg)
						让元素向着x轴的方向产生倾斜效果，实际上是改变y轴的倾斜角度值
						x 取值为正，y轴逆时针倾斜
						x 取值为负，y轴顺时针倾斜
					2、skewY(ydeg)
						让元素向着y轴的方向产生倾斜效果，实际上是改变x轴的倾斜角度制
						y 取值为正，x轴顺时针倾斜
						y 取值为负，x轴逆时针倾斜
					3、skew(x)
						等同于 skewX()
					4、skew(x,y)

					练习：
						1、页面中创建一个元素200*200的，增加边框或背景
						2、鼠标悬停的时候，该元素向右偏移200px，向下偏移200px，旋转135deg，向x轴倾斜45deg，同时放大1.1倍
	4、3D转换
		1、透视距离
			模拟人眼到3d转换元素之间的距离
			属性：perspective
			注意：该属性要加在3d转换元素的父元素上。
		2、3D旋转
			属性：transform
			取值：
				1、rotateX(xdeg)
					沿x轴旋转的角度
				2、rotateY(ydeg)
					沿y轴旋转的角度
				3、rotateZ(zdeg)
					沿z轴旋转的角度
				4、rotate3d(x,y,z,ndeg)
					x,y,z 取值为大于0的数字时，则表示该轴要参与到旋转中来，如果取值为0，该轴则不参与旋转
					练习：
						使用rotate3d，x,y,z同时旋转

16.动画
	1、什么是动画
		使元素从一种样式逐渐变化为另一种样式
		动画是复杂的过渡效果

		动画是通过 "关键帧" ， 来控制动画的每一步
		关键帧：
			1、动画执行的时间点
			2、在该时间点上元素的样式
	2、动画的使用步骤
		1、声明动画
		2、为元素调用动画
	3、声明动画
		@keyframes 动画名称{
			/*定义该动画中所有的关键帧*/

			0%{
				/*动画开始时的样式*/
			}

			25%{
				/*动画执行到 1/4 的时候的样式*/
			}

			50%{
				/*动画执行到 1/2 的时候的样式*/
			}

			100%{
				/*动画结束时的样式*/
			}
		}

		兼容性
		@-moz-keyframes 动画名称{
			
		}
		
		@-webkit-keyframes 动画名称{
			
		}

		@-o-keyframes 动画名称{
			
		}

		@-ms-keyframes 动画名称{
			
		}
	4、动画属性 
		1、animation-name
			作用：指定调用动画的名称
		2、animation-duration
			作用：指定动画执行一个周期的时长
			取值：以 s 或 ms 为单位的数值
		3、animation-timing-function
			作用：指定动画的速度时间函数
			取值：ease,linear,ease-in,ease-out,ease-in-out
		4、animation-delay
			作用：指定动画的延迟时长
			取值：以 s 或 ms 为单位的数值
		5、animation-iteration-count
			作用：指定动画的播放次数
			取值：
				1、具体数值
				2、infinite ：无限次
		6、animation-direction
			作用：指定动画的播放方向
			取值：
				1、normal ：正常播放
				2、alternate ：轮流播放
					奇数次数播放时，正向播放(0%~100%)
					偶数次数播放时，逆向播放(100%~0%)
		7、动画的简介写法
			animation:name duration timing-function delay iteration-count direction;
		8、animation-fill-mode
			作用：规定动画在播放前或播放后的状态
			取值：
				1、none ：不改变默认行为
				2、forwards ：当动画完成后，保持在最后一个帧的状态上
				3、backwards ：在动画播放前，延迟时间内，动画将保持在第一个帧的状态上
				4、both
					forwards 和 backwards 的结合体
		9、animation-play-state
			作用：指定动画的播放状态
			取值：
				1、paused : 动画暂停
				2、running : 动画播放



	5、动画的调用时机
		1、在 :hover 时调用动画
			只有在鼠标悬停在元素上时，执行动画
		2、在元素声明的样式中，直接调用动画
			网页加载时，就执行动画
		
		练习：
			在网页加载时，调用 scroll 动画，执行一个周期的时长是3s，匀速执行，并且反复执行

